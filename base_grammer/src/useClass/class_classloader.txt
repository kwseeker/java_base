类加载器的工作原理
http://www.importnew.com/6581.html

一、类加载器简介
类加载器通常也是比较高级的Java面试中的重要考题，Java类加载器和工作原理以及classpath如何运作的经常被问到。Java面试题中也经常出现“一个类是否能被两个不同类加载器加载”这样的问题。

类加载器是一个用来加载类文件的类。Java源代码通过javac编译器编译成类文件。然后JVM来执行类文件中的字节码来执行程序。类加载器负责加载文件系统、网络或其他来源的类文件。有三种默认使用的类加载器：Bootstrap类加载器、Extension类加载器和System类加载器（或者叫作Application类加载器）。每种类加载器都有设定好从哪里加载类。
1） Bootstrap类加载器负责加载rt.jar中的JDK类文件，它是所有类加载器的父加载器。Bootstrap类加载器没有任何父类加载器，如果你调用String.class.getClassLoader()，会返回null，任何基于此的代码会抛出NUllPointerException异常。Bootstrap加载器被称为初始类加载器。
2）而Extension将加载类的请求先委托给它的父加载器，也就是Bootstrap，如果没有成功加载的话，再从jre/lib/ext目录下或者java.ext.dirs系统属性定义的目录下加载类。Extension加载器由sun.misc.Launcher$ExtClassLoader实现。
3）第三种默认的加载器就是System类加载器（又叫作Application类加载器）了。它负责从classpath环境变量中加载某些应用相关的类，classpath环境变量通常由-classpath或-cp命令行选项来定义，或者是JAR中的Manifest的classpath属性。Application类加载器是Extension类加载器的子加载器。通过sun.misc.Launcher$AppClassLoader实现。

总结一下，下面是三种类加载器加载类文件的地方：
1) Bootstrap类加载器 – JRE/lib/rt.jar
2) Extension类加载器 – JRE/lib/ext或者java.ext.dirs指向的目录
3) Application类加载器 – CLASSPATH环境变量, 由-classpath或-cp选项定义,或者是JAR中的Manifest的classpath属性定义.

二、类加载器工作原理基于三种机制
委托机制：从父类类加载器到Application类加载器逐层查找，直到找到类就加载，没找到交给下一个类加载器查找。
可见性机制：子类加载器可以看到父类加载器加载的类，而反之则不行。
单一性机制：父加载器加载过的类不能被子加载器加载第二次。

三、显示的加载类
Java提供了显式加载类的API：Class.forName(classname)和Class.forName(classname, initialized, classloader)。

四、类加载器在实际中的应用

1. 类层次划分
2. OSGI模块化开发（过时）
3. 热部署
4. 代码加解密
5. Tomcat容器加载WebApp
6. ...
